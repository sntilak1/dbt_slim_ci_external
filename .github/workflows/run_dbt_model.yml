name: execute_dbt_project

on:
    pull_request:

    workflow_dispatch:
    #schedule:
    #  - cron: "15 * * * * "
    #  - cron: "15 * * * * "
    # https://crontab.guru/
    #
    #
    #

jobs:
    execute_dbt:
        runs-on: [self-hosted, cloud] #ubuntu-latest
        steps:
          # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
          - name: checkout
            uses: actions/checkout@v2
          - name: echo repo name
            run: echo "${{ github.event.repository.name }}"
          - name: execute_dbt_project
            env:
                etl_role: ${{secrets.ETL_ROLE}}
                #https://docs.github.com/en/actions/security-guides/encrypted-secrets                
            run: |
                pwd
                cd ${{ github.workspace }}
                #pwd
                #ls -la
                echo "${{ secrets.PAT_FOR_ACTIONS }}" | docker login ghcr.io -u CES-Data-Analytics --password-stdin
                echo "${{github.event_name}}"
                #echo "SHA and github run id"
                #echo "$GITHUB_SHA$GITHUB_RUN_ID:latest"
                docker build -t "$GITHUB_SHA$GITHUB_RUN_ID:latest" .
                docker run --name "$GITHUB_SHA$GITHUB_RUN_ID" -e sharepoint_appid='${{secrets.SHAREPOINT_APPID}}' -e sharepoint_api_key='${{secrets.SHAREPOINT_API_KEY}}'  -e github_action_type="${{github.event_name}}" -e repo_name="${{ github.event.repository.name }}" -e github_pat="${{secrets.PAT_FOR_ACTIONS}}" -e etl_user_pw="${{secrets.ETL_ROLE}}" "$GITHUB_SHA$GITHUB_RUN_ID:latest"
          - name: remove container
            if: always()
            run: docker container rm "$GITHUB_SHA$GITHUB_RUN_ID"
            continue-on-error: true   
          - name: remove image
            if: always()
            run: docker image rm "$GITHUB_SHA$GITHUB_RUN_ID"
            continue-on-error: true
          - name: Delete target directory
            if: always()
            run: |
             ls -la ./
             rm -rf ./* || true
             rm -rf ./.??* || true
             ls -la ./               
#    trigger_rerun:
#        runs-on: [self-hosted, cloud]
#        needs: execute_dbt
#        steps:
#          - name: cURL              
#            run: |
#                curl -X POST   -H "Accept: application/vnd.github+json"   -H "Authorization: Bearer ${{secrets.PAT_FOR_ACTIONS}}"  -H "X-GitHub-Api-Version: 2022-11-28"   https://api.github.com/repos/CES-Data-Analytics/deal_management_rewards/actions/workflows/test.yml/dispatches   -d '{"ref":"main"}'

 
